#pragma once

#include <string>
#include <vector>
#include <chrono>
#include "DBManager.h"

struct YR_RULES;

// 내부 탐지 결과 구조체 (scan, yara 검사 후 리턴값)
struct DetectResult {
    bool detected;
    std::string cause;
    std::string malwareName;
};

// 검사 결과 관련 구조체
struct ScanInfo {
    std::string path;   // 원본 파일 경로
    std::string cause;  // 격리 원인 (hash or yara)
    std::string name;   // 악성코드 이름 또는 해시
    long long size;     // 원본 파일 사이즈
};

class MalwareScan
{
public:
    MalwareScan();
    ~MalwareScan();

    // 검사 실행
    void Run();

    // 검사 리포트 출력 (시작 시각과 종료 시각 전달)
    void PrintReport(const std::chrono::system_clock::time_point& startTime,
                     const std::chrono::system_clock::time_point& endTime) const;

private:
    std::string mDir;
    std::vector<std::string> mExceptionDir;
    long long mMaxSize;
    bool mbShouldQuarantine = false;

    std::vector<ScanInfo> mScanInfo;
    int mTotalScannedFiles = 0;
    std::vector<bool> mQuarantineResults;

    StorageHash* mHashStorage = nullptr;
    YR_RULES* mYaraRules = nullptr;

    DetectResult detectByHash(const std::string& filePath);
    std::string computeHash(const std::string& filePath, const std::string& algo);
    DetectResult matchYaraRules(const std::string& filePath);
};

