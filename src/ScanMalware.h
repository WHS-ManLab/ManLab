#ifndef SCANMALWARE_H
#define SCANMALWARE_H

#include <string>
#include <vector>

struct sqlite3;
struct YR_RULES;

// 내부 탐지 결과 구조체(scan, yara검사 후 리턴값)
struct DetectResult {
    bool detected;
    std::string cause;
    std::string malwareName;
};

// 리포트 기록 구조체
struct DetectionResultRecord {
    std::string path;
    std::string cause;
    std::string name;
    long long size;
    bool quarantined;
};


class ScanMalware
{
public:
    // 생성자, 소멸자
    ScanMalware(std::string dir, std::vector<std::string> exceptionDir, long long maxSize);
    ~ScanMalware();

    // 검사 실행
    void run();

    // 리포트 인터페이스
    int getTotalScannedFiles() const;
    int getDetectedFiles() const;
    int getQuarantinedFiles() const;
    const std::vector<DetectionResultRecord>& getDetectionResults() const;

private:
    std::string m_dir;                          // 검사 루트 디렉토리
    std::vector<std::string> m_exceptionDir;    // 예외 디렉토리 목록
    long long m_maxSize;                        // 최대 검사 파일 크기 (bytes)

    std::vector<DetectionResultRecord> m_detectionResults;
    int m_totalScannedFiles = 0;

    // DB 및 YARA 룰 포인터
    sqlite3* m_db = nullptr;
    YR_RULES* m_yaraRules = nullptr;

    // 유틸 함수
    DetectResult detectByHash(const std::string& filePath);
    std::string computeHash(const std::string& filePath, const std::string& algo);
    DetectResult matchYaraRules(const std::string& filePath);
};

#endif // SCANMALWARE_H
